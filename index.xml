<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My New Hugo Site</title>
    <link>https://z55547824zz.github.io/</link>
    <description>Recent content on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 21 Feb 2020 16:38:26 +0800</lastBuildDate>
    
	<atom:link href="https://z55547824zz.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git &amp; Github 学习笔记</title>
      <link>https://z55547824zz.github.io/post/firstarticle/</link>
      <pubDate>Fri, 21 Feb 2020 16:38:26 +0800</pubDate>
      
      <guid>https://z55547824zz.github.io/post/firstarticle/</guid>
      <description>Git和GitHub详解 （一）Git基础 Git 下载和安装  下载地址： https://git-scm.com/downloads 使用默认值安装 资源管理器内单击鼠标右键选择 Git Bash Here 输入git --version 检查是否安装成功  Git 基本工作流程  主要涉及到四个关键点：
 工作区：本地电脑存放项目文件的地方，比如learnGitProject文件夹； 暂存区（Index/Stage）：在使用git管理项目文件的时候，其本地的项目文件会多出一个.git的文件夹，将这个.git文件夹称之为版本库。其中.git文件夹中包含了两个部分，一个是暂存区（Index或者Stage）,顾名思义就是暂时存放文件的地方，通常使用add命令将工作区的文件添加到暂存区里； 本地仓库：.git文件夹里还包括git自动创建的master分支，并且将HEAD指针指向master分支。使用commit命令可以将暂存区中的文件添加到本地仓库中； 远程仓库：不是在本地仓库中，项目代码在远程git服务器上，比如项目放在github上，就是一个远程仓库，通常使用clone命令将远程仓库拷贝到本地仓库中，开发后推送到远程仓库中即可；  更细节的来看：
日常开发时代码实际上放置在工作区中，也就是本地的XXX.java这些文件，通过add等这些命令将代码文教提交给暂存区（Index/Stage），也就意味着代码全权交给了git进行管理，之后通过commit等命令将暂存区提交给master分支上，也就是意味打了一个版本，也可以说代码提交到了本地仓库中。另外，团队协作过程中自然而然还涉及到与远程仓库的交互。
因此，经过这样的分析，git命令可以分为这样的逻辑进行理解和记忆：
  git管理配置的命令；
几个核心存储区的交互命令：
  工作区与暂存区的交互；
  暂存区与本地仓库（分支）上的交互；
  本地仓库与远程仓库的交互。
  作者：你听___ 链接：https://juejin.im/post/5ae072906fb9a07a9e4ce596 来源：掘金 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
    工作目录 暂存区 git 仓库 远程仓库     被Git管理的项目 临时存放被修改的文件 目录用于存放提交记录 远程代码仓库   git init git add git commit git push    Git使用前的配置命令 在使用前告诉git你是谁：</description>
    </item>
    
  </channel>
</rss>